# Generated by Django 4.0.5 on 2022-06-27 19:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.PositiveSmallIntegerField(choices=[(0, 'Unscheduled'), (1, 'Player 1 Won'), (2, 'Player 2 Won'), (3, "The game didn't happen.")], default=0)),
                ('player_1_points', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('player_2_points', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('player_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_as_first_player', to=settings.AUTH_USER_MODEL)),
                ('player_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_as_second_player', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Round',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.event')),
            ],
        ),
        migrations.CreateModel(
            name='MyUserEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Joined'), (0, 'Dropped')], default=1)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatchReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.PositiveSmallIntegerField(choices=[(1, 'Player 1 Won'), (2, 'Player 2 Won'), (3, "The game didn't happen.")])),
                ('player_1_points', models.PositiveSmallIntegerField()),
                ('player_2_points', models.PositiveSmallIntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.match')),
                ('player_1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_reports_as_first_player', to=settings.AUTH_USER_MODEL)),
                ('player_2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_reports_as_second_player', to=settings.AUTH_USER_MODEL)),
                ('submitter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_match_reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='roundd',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.round', verbose_name='round'),
        ),
        migrations.AddField(
            model_name='event',
            name='participants',
            field=models.ManyToManyField(through='event.MyUserEvent', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='myuserevent',
            constraint=models.UniqueConstraint(fields=('user', 'event'), name='unique_user_to_event'),
        ),
    ]
